name: Code Automation

on:
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  process-issue:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'feature-request')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.FINANCE_APP }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci
          echo "Dependencies installed successfully"

      - name: Create Feature Branch
        run: |
          # Create feature branch name from issue title
          BRANCH_NAME="feature/$(echo '${{ github.event.issue.title }}' | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | tr 'ı' 'i' | tr 'ş' 's' | tr 'ğ' 'g' | tr 'ü' 'u' | tr 'ö' 'o' | tr 'ç' 'c')"
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -b "$BRANCH_NAME" || echo "Branch already exists, switching to it..."
          git checkout "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Generate Login Page
        if: contains(github.event.issue.title, 'Giriş sayfası') || contains(github.event.issue.title, 'login')
        run: |
          mkdir -p src/components/auth
          cat > src/components/auth/Login.jsx << 'EOL'
          import { useState } from 'react'

          const Login = () => {
            const [formData, setFormData] = useState({
              email: '',
              password: ''
            })

            const handleChange = (e) => {
              setFormData({
                ...formData,
                [e.target.name]: e.target.value
              })
            }

            const handleSubmit = (e) => {
              e.preventDefault()
              console.log('Form submitted:', formData)
            }

            return (
              <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
                <div className="max-w-md w-full space-y-8">
                  <div>
                    <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
                      Giriş Yap
                    </h2>
                  </div>
                  <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
                    <div className="rounded-md shadow-sm -space-y-px">
                      <div>
                        <label htmlFor="email" className="sr-only">
                          E-posta Adresi
                        </label>
                        <input
                          id="email"
                          name="email"
                          type="email"
                          required
                          className="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
                          placeholder="E-posta Adresi"
                          value={formData.email}
                          onChange={handleChange}
                        />
                      </div>
                      <div>
                        <label htmlFor="password" className="sr-only">
                          Şifre
                        </label>
                        <input
                          id="password"
                          name="password"
                          type="password"
                          required
                          className="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
                          placeholder="Şifre"
                          value={formData.password}
                          onChange={handleChange}
                        />
                      </div>
                    </div>

                    <div>
                      <button
                        type="submit"
                        className="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                      >
                        Giriş Yap
                      </button>
                    </div>

                    <div className="flex items-center justify-between">
                      <div className="text-sm">
                        <a href="#" className="font-medium text-indigo-600 hover:text-indigo-500">
                          Şifremi Unuttum
                        </a>
                      </div>
                      <div className="text-sm">
                        <a href="#" className="font-medium text-indigo-600 hover:text-indigo-500">
                          Hesabınız yok mu? Kayıt Ol
                        </a>
                      </div>
                    </div>
                  </form>
                </div>
              </div>
            )
          }

          export default Login
          EOL

          # Update package.json for Vite and Tailwind
          cat > package.json << 'EOL'
          {
            "name": "finance-app",
            "private": true,
            "version": "0.1.0",
            "type": "module",
            "scripts": {
              "dev": "vite",
              "build": "vite build",
              "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
              "preview": "vite preview"
            },
            "dependencies": {
              "react": "^18.2.0",
              "react-dom": "^18.2.0"
            },
            "devDependencies": {
              "@types/react": "^18.2.43",
              "@types/react-dom": "^18.2.17",
              "@vitejs/plugin-react": "^4.2.1",
              "autoprefixer": "^10.4.16",
              "eslint": "^8.55.0",
              "eslint-plugin-react": "^7.33.2",
              "eslint-plugin-react-hooks": "^4.6.0",
              "eslint-plugin-react-refresh": "^0.4.5",
              "postcss": "^8.4.32",
              "tailwindcss": "^3.4.0",
              "vite": "^5.0.8"
            }
          }
          EOL

          # Create Vite config
          cat > vite.config.js << 'EOL'
          import { defineConfig } from 'vite'
          import react from '@vitejs/plugin-react'

          export default defineConfig({
            plugins: [react()],
          })
          EOL

          # Create Tailwind config
          cat > tailwind.config.js << 'EOL'
          /** @type {import('tailwindcss').Config} */
          export default {
            content: [
              "./index.html",
              "./src/**/*.{js,ts,jsx,tsx}",
            ],
            theme: {
              extend: {},
            },
            plugins: [],
          }
          EOL

          # Create PostCSS config
          cat > postcss.config.js << 'EOL'
          export default {
            plugins: {
              tailwindcss: {},
              autoprefixer: {},
            },
          }
          EOL

          # Create index.css with Tailwind directives
          cat > src/index.css << 'EOL'
          @tailwind base;
          @tailwind components;
          @tailwind utilities;
          EOL

          git add . || echo "Failed to add files, but continuing..."
          git commit -m "feat: Giriş sayfası oluşturuldu (React + Vite + Tailwind) - Issue #${{ github.event.issue.number }}" || echo "Failed to commit files, but continuing..."

      - name: Push Changes and Create PR
        run: |
          echo "Pushing changes to branch ${{ env.BRANCH_NAME }}..."
          git push origin ${{ env.BRANCH_NAME }} || echo "Failed to push changes, but continuing..."
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.FINANCE_APP }}
          commit-message: "feat: ${{ github.event.issue.title }} implementasyonu"
          title: "✨ Feature: ${{ github.event.issue.title }}"
          body: |
            Closes #${{ github.event.issue.number }}
            
            ## 📝 Implementation Details
            ${{ github.event.issue.body }}
            
            ## 🔍 Review Points
            - [ ] Feature requirements met
            - [ ] Component functionality tested
            - [ ] UI/UX design approved
            - [ ] Code follows project standards
            
            ## 🎯 Related Issue
            Issue: #${{ github.event.issue.number }} 